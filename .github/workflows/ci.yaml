name: CI
on:
  push:
    branches:
      - staging
      - trying
  pull_request:

env:
  CARGO_INCREMENTAL: 0

jobs:
  check:
    name: Clippy
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -D warnings
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: beta
          override: true
          components: clippy
      - name: Check
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ github.token }}
          args: --all-targets --all-features

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Toolcahin
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Toolchain
        id: toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: beta
          profile: minimal
          override: true
      - name: Cache
        uses: actions/cache@v1
        with:
          path: target
          key: rustc-${{ steps.toolchain.outputs.rustc_hash }}-tests-${{ hashFiles('**/Cargo.lock') }}
      - name: Compile
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-targets --all-features --no-run
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-targets --all-features --no-fail-fast

  miri:
    name: Miri
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Toolchain
        id: toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: miri, rust-src
      - name: Cache
        uses: actions/cache@v1
        with:
          path: target
          key: rustc-${{ steps.toolchain.outputs.rustc_hash }}-miri-${{ hashFiles('**/Cargo.lock') }}
      - name: Setup
        uses: actions-rs/cargo@v1
        with:
          command: miri
          args: setup
      - name: Test 64 bit target
        uses: actions-rs/cargo@v1
        with:
          command: miri
          args: test --all-features --target x86_64-unknown-linux-gnu
      - name: Test 32 bit target
        uses: actions-rs/cargo@v1
        with:
          command: miri
          args: test --all-features --target i686-unknown-linux-gnu

  coverage:
    name: Coverage (tarpaulin)
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Toolchain
        id: toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: beta
          override: true
      - name: Cache
        uses: actions/cache@v1
        with:
          path: target
          key: rustc-${{ steps.toolchain.outputs.rustc_hash }}-tarpaulin-${{ hashFiles('**/Cargo.lock') }}
      - name: Run Tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.14.2'
          args: --all-features --ignore-tests --run-types Tests Doctests Examples
      - name: Upload coverage report
        uses: codecov/codecov-action@v1
